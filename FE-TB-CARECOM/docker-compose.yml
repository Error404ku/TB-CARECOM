version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: tb-carecom-frontend
    ports:
      - "5173:80"
    environment:
      # Production environment variables
      - NODE_ENV=production
    restart: unless-stopped
# Temporarily disabled volume mounts to fix ContainerConfig error
    # volumes:
    #   # Mount nginx logs for debugging
    #   - ./logs/nginx:/var/log/nginx
    networks:
      - tb-carecom-network
# Temporarily disabled healthcheck to fix ContainerConfig error
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost/health"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  # Backend service (placeholder - uncomment and configure when ready)
  # backend:
  #   image: your-backend-image:latest
  #   container_name: tb-carecom-backend
  #   ports:
  #     - "8000:8000"
  #   environment:
  #     - DATABASE_URL=postgresql://user:password@db:5432/tbcarecom
  #     - JWT_SECRET=your-jwt-secret
  #   restart: unless-stopped
  #   networks:
  #     - tb-carecom-network
  #   depends_on:
  #     - db

  # Database service (placeholder - uncomment when ready)
  # db:
  #   image: postgres:15-alpine
  #   container_name: tb-carecom-db
  #   environment:
  #     - POSTGRES_DB=tbcarecom
  #     - POSTGRES_USER=user
  #     - POSTGRES_PASSWORD=password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   restart: unless-stopped
  #   networks:
  #     - tb-carecom-network

networks:
  tb-carecom-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 